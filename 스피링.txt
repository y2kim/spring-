스프링 :  잘 만들자    
스프링 프레임워크  :  디자인패턴, 트렌잭션 ,암호화, 라이프사이클   S/W 시점인것들  , 의존성 이런 문제적해결
EJB   <-  최초     필요악  , 진입장벽 겁나 높음   그들의 규칙에 맟춰야함  


스프링 라이브러리 or 플러그인  설치  
MAVEN  <-    프로젝트 관리 프레임 워크 

maven  - 라이브러리  자동화               버그의 행연 
Project Object Manager Xml     -repostory    


IOC 

Container (Tomcat 관련) [servlet] smart 


DI 가  중요함 

Spring MVC

AOP  (관점지향)  [패러다임] 횡단관심사      


service layout  필수 !    


스프링은  3단계 이상  패키지 이름을 지어야 함 

요지 :  코드를 잘 짜다 


xml 문서로 유지 
DBCP     xml  커넥션 풀     
인수 부분이 된다  
interface-> dl -> di


의존선 주입  


싱글톤 

프로토타입


어노테이션 비중이 조금 높다      



DTO  = VO [전송] 

카멜케이스  때문에  개지랄남 


@Component   <-  xml , bean, 자동생성 
@Scope  <- (싱글톤,  프로토타입 )  기본 싱글톤 
context:component-scan
base-package : 스캔 지정 
ProductVO instance = (ProductVO)ctx.getBean("productVO");
첫 글자에서 소문자로 바꾸면 된다  
@value 어노테이션(초기값 줄수있음) 
@AutoWired (자료형 기준 )
스캔 - 빈 


동적바인딩 
Spring Container - 이것도 인스턴스 (첫 생성 인스턴스  시작)
context  - 스프링이 일하는  환경  처음 시작점 
인스턴스는 실질적으로 생성  

 
CRUD 

DTO, DAO , DPCP [],xml 


-서비스 레이아웃
트랜젝션 처리를 위하여 



어노테이션 - 컴포넌트,빈
@Component   @Repository  : 서비스 , DAO  같은 특수성 애들은   다른용어로 부른다
@Service  @Controller

Spring JDBC 